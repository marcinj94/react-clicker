{"version":3,"sources":["components/Header/Header.js","components/Result/Result.js","components/Buttons/Button/Button.js","components/Buttons/Buttons.js","components/Clicker/Clicker.js","components/TotalClicks/TotalClicks.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Result","props","result","Button","btnClass","onClick","click","index_es","icon","library","add","faPlus","faMinus","faSyncAlt","Buttons","Buttons_Button_Button","addPoint","clear","subtractPoint","Clicker","components_Result_Result","components_Buttons_Buttons","plusHandle","minusHandle","refreshHandle","TotalClicks","style","textAlign","fontSize","paddingBottom","totalClick","App","state","handleAddPoint","_this","setState","prevState","handleSubtractPoint","handleClearResult","allClicks","this","components_TotalClicks_TotalClicks","Fragment","components_Header_Header","components_Clicker_Clicker","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mVAWeA,SARA,WACX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,uBCKGC,eARA,SAACC,GACZ,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,YAAOG,EAAMC,iCCOVC,EARA,SAACF,GACZ,OACIL,EAAAC,EAAAC,cAAA,UAAQC,UAAWE,EAAMG,SAAUC,QAASJ,EAAMK,OAC9CV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAiBC,KAAMP,EAAMO,uBCDzCC,IAAQC,IAAIC,IAAQC,IAASC,KAE7B,IAsBeC,EAtBC,SAACb,GACb,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIX,SAAS,WACTE,MAAOL,EAAMe,SACbR,KAAMG,MAEVf,EAAAC,EAAAC,cAACiB,EAAD,CACIX,SAAS,aACTE,MAAOL,EAAMgB,MACbT,KAAMK,MAEVjB,EAAAC,EAAAC,cAACiB,EAAD,CACIX,SAAS,gBACTE,MAAOL,EAAMiB,cACbV,KAAMI,QCNPO,EAbC,SAAClB,GACb,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACsB,EAAD,CAAQlB,OAAQD,EAAMC,SACtBN,EAAAC,EAAAC,cAACuB,EAAD,CACIL,SAAUf,EAAMqB,WAChBJ,cAAejB,EAAMsB,YACrBN,MAAOhB,EAAMuB,kBCEdC,EAbK,SAACxB,GAQjB,OACIL,EAAAC,EAAAC,cAAA,KAAG4B,MAPO,CACVC,UAAW,SACXC,SAAU,OACVC,cAAe,SAIf,0BAAyC5B,EAAM6B,aCwCxCC,6MA5CbC,MAAQ,CACN9B,OAAQ,EACR4B,WAAY,KAGdG,eAAiB,WACfC,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BlC,OAAQkC,EAAUlC,OAAS,EAC3B4B,WAAYM,EAAUN,WAAa,QAIvCO,oBAAsB,WACpBH,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BlC,OAAQkC,EAAUlC,OAAS,EAC3B4B,WAAYM,EAAUN,WAAa,QAIvCQ,kBAAoB,WAClBJ,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BlC,OAAQ,EACR4B,WAAYM,EAAUN,WAAa,8EAMrC,IAAMS,EAAYC,KAAKR,MAAMF,WAAa,EAAIlC,EAAAC,EAAAC,cAAC2C,EAAD,CAAaX,WAAYU,KAAKR,MAAMF,aAAiB,KACnG,OACElC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6C,SAAA,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8C,EAAD,CACE1C,OAAQsC,KAAKR,MAAM9B,OACnBoB,WAAYkB,KAAKP,eACjBV,YAAaiB,KAAKH,oBAClBb,cAAegB,KAAKF,oBAErBC,UAxCSM,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.78fc8b48.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">React.js Clicker</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Result.css';\r\n\r\nconst Result = (props) => {\r\n    return (\r\n        <div className=\"result\">\r\n            <span>{props.result}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport './Button.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={props.btnClass} onClick={props.click}>\r\n            <FontAwesomeIcon icon={props.icon} />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Buttons.css';\r\nimport Button from './Button/Button'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faPlus, faMinus, faSyncAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faPlus, faMinus, faSyncAlt);\r\n\r\nconst Buttons = (props) => {\r\n    return (\r\n        <div className=\"buttons\">\r\n            <Button\r\n                btnClass=\"btn__add\"\r\n                click={props.addPoint}\r\n                icon={faPlus}\r\n            />\r\n            <Button\r\n                btnClass=\"btn__clear\"\r\n                click={props.clear}\r\n                icon={faSyncAlt}\r\n            />\r\n            <Button\r\n                btnClass=\"btn__subtract\"\r\n                click={props.subtractPoint}\r\n                icon={faMinus}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport './Clicker.css';\r\n\r\nimport Result from '../Result/Result';\r\nimport Buttons from '../Buttons/Buttons';\r\n\r\nconst Clicker = (props) => {\r\n    return (\r\n        <div className=\"clicker\">\r\n            <Result result={props.result} />\r\n            <Buttons\r\n                addPoint={props.plusHandle}\r\n                subtractPoint={props.minusHandle}\r\n                clear={props.refreshHandle}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clicker;","import React from 'react';\r\n\r\nconst TotalClicks = (props) => {\r\n\r\n    const style = {\r\n        textAlign: 'center',\r\n        fontSize: '30px',\r\n        paddingBottom: '10px'\r\n    }\r\n\r\n    return (\r\n        <p style={style}>Total count of clicks: {props.totalClick}</p>\r\n    )\r\n}\r\n\r\nexport default TotalClicks;","import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport Clicker from './Clicker/Clicker';\nimport TotalClicks from './TotalClicks/TotalClicks'\n\nclass App extends Component {\n\n  state = {\n    result: 0,\n    totalClick: 0,\n  }\n\n  handleAddPoint = () => {\n    this.setState(prevState => ({\n      result: prevState.result + 1,\n      totalClick: prevState.totalClick + 1,\n    }))\n  }\n\n  handleSubtractPoint = () => {\n    this.setState(prevState => ({\n      result: prevState.result - 1,\n      totalClick: prevState.totalClick + 1,\n    }))\n  }\n\n  handleClearResult = () => {\n    this.setState(prevState => ({\n      result: 0,\n      totalClick: prevState.totalClick + 1,\n    }))\n  }\n\n  render() {\n\n    const allClicks = this.state.totalClick > 0 ? <TotalClicks totalClick={this.state.totalClick} /> : null;\n    return (\n      <>\n        <Header />\n        <Clicker\n          result={this.state.result}\n          plusHandle={this.handleAddPoint}\n          minusHandle={this.handleSubtractPoint}\n          refreshHandle={this.handleClearResult}\n        />\n        {allClicks}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}